{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "PrashanthVemula"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureBlobStorage5_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage5'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"AzureSqlDatabase3_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase3'"
		},
		"AzureTableStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureTableStorage1'"
		},
		"AzureTableStorage2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureTableStorage2'"
		},
		"default_properties_adfprameter_value": {
			"type": "string",
			"defaultValue": "prashanth"
		},
		"AzureDataExplorer1_properties_typeProperties_endpoint": {
			"type": "string",
			"defaultValue": "https://praskusto.eastus.kusto.windows.net"
		},
		"AzureDataExplorer1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "yuvacase"
		},
		"AzureDataExplorer2_properties_typeProperties_endpoint": {
			"type": "string",
			"defaultValue": "https://praskusto.eastus.kusto.windows.net"
		},
		"AzureDataExplorer2_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "yuvacase"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://prasKeyvault.vault.azure.net/"
		},
		"trigger3_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/8c2b4ab7-2c19-4a9a-a786-aee7ea4d2db3/resourceGroups/prashanthdailywork/providers/Microsoft.Storage/storageAccounts/prasreproduce"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/globalparameters",
			"apiVersion": "2018-06-01",
			"properties": {
				"adfprameter": {
					"type": "string",
					"value": "[parameters('default_properties_adfprameter_value')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline7')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "FromDate",
							"value": {
								"value": "'ADF_Demo'",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://dummy.restapiexample.com/api/v1/employees",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n    'employee_name' =@{variables('FromDate')}\n}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"FromDate": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-04-05T08:14:56Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage5')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage5_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataExplorer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataExplorer",
				"typeProperties": {
					"endpoint": "[parameters('AzureDataExplorer1_properties_typeProperties_endpoint')]",
					"database": "[parameters('AzureDataExplorer1_properties_typeProperties_database')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataExplorer2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataExplorer",
				"typeProperties": {
					"endpoint": "[parameters('AzureDataExplorer2_properties_typeProperties_endpoint')]",
					"database": "[parameters('AzureDataExplorer2_properties_typeProperties_database')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase3_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureTableStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureTableStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureTableStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureTableStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureTableStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureTableStorage2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger3')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/yuvasreerepro/blobs/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trigger3_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Auto8core')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 16,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SelfHostedIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SelfIRTwo')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime2')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime3')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pla-ir-pwp-t01-eus')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ANA_MI_CREDENTIAL')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {
					"resourceId": "/subscriptions/8c2b4ab7-2c19-4a9a-a786-aee7ea4d2db3/resourcegroups/prashanthdailywork/providers/Microsoft.ManagedIdentity/userAssignedIdentities/SampleManagedidentity"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfcdc1')]",
			"type": "Microsoft.DataFactory/factories/adfcdcs",
			"apiVersion": "2018-06-01",
			"properties": {
				"SourceConnectionsInfo": [
					{
						"SourceEntities": [
							{
								"name": "reprojsonfile/Input",
								"properties": {
									"schema": [],
									"dslConnectorProperties": [
										{
											"name": "container",
											"value": "reprojsonfile"
										},
										{
											"name": "fileSystem",
											"value": "reprojsonfile"
										},
										{
											"name": "folderPath",
											"value": "Input"
										}
									]
								}
							}
						],
						"Connection": {
							"linkedServiceType": "AzureBlobStorage",
							"type": "linkedservicetype",
							"isInlineDataset": true,
							"commonDslConnectorProperties": [
								{
									"name": "allowSchemaDrift",
									"value": true
								},
								{
									"name": "inferDriftedColumnTypes",
									"value": true
								},
								{
									"name": "format",
									"value": "delimited"
								},
								{
									"name": "dateFormats",
									"value": [
										"MM/dd/yyyy",
										"dd/MM/yyyy",
										"yyyy/MM/dd",
										"MM-dd-yyyy",
										"dd-MM-yyyy",
										"yyyy-MM-dd",
										"dd.MM.yyyy",
										"MM.dd.yyyy",
										"yyyy.MM.dd"
									]
								},
								{
									"name": "timestampFormats",
									"value": [
										"yyyyMMddHHmm",
										"yyyyMMdd HHmm",
										"yyyyMMddHHmmss",
										"yyyyMMdd HHmmss",
										"dd-MM-yyyy HH:mm:ss",
										"dd-MM-yyyy HH:mm",
										"yyyy-M-d H:m:s",
										"yyyy-MM-dd\\'T\\'HH:mm:ss\\'Z\\'",
										"yyyy-M-d\\'T\\'H:m:s\\'Z\\'",
										"yyyy-M-d\\'T\\'H:m:s",
										"yyyy-MM-dd\\'T\\'HH:mm:ss",
										"yyyy-MM-dd HH:mm:ss",
										"yyyy-MM-dd HH:mm",
										"yyyy.MM.dd HH:mm:ss",
										"MM/dd/yyyy HH:mm:ss",
										"M/d/yyyy H:m:s",
										"yyyy/MM/dd HH:mm:ss",
										"yyyy/M/d H:m:s",
										"dd MMM yyyy HH:mm:ss",
										"dd MMMM yyyy HH:mm:ss",
										"d MMM yyyy H:m:s",
										"d MMMM yyyy H:m:s",
										"d-M-yyyy H:m:s",
										"d-M-yyyy H:m",
										"yyyy-M-d H:m",
										"MM/dd/yyyy HH:mm",
										"M/d/yyyy H:m",
										"yyyy/MM/dd HH:mm",
										"yyyy/M/d H:m",
										"dd MMMM yyyy HH:mm",
										"dd MMM yyyy HH:mm",
										"d MMMM yyyy H:m",
										"d MMM yyyy H:m",
										"MM-dd-yyyy hh:mm:ss a",
										"MM-dd-yyyy HH:mm:ss",
										"MM/dd/yyyy hh:mm:ss a",
										"yyyy.MM.dd hh:mm:ss a",
										"MM/dd/yyyy",
										"dd/MM/yyyy",
										"yyyy/MM/dd",
										"MM-dd-yyyy",
										"dd-MM-yyyy",
										"yyyy-MM-dd",
										"dd.MM.yyyy",
										"MM.dd.yyyy",
										"yyyy.MM.dd"
									]
								},
								{
									"name": "enableCdc",
									"value": true
								},
								{
									"name": "skipInitialLoad",
									"value": true
								},
								{
									"name": "columnNamesAsHeader",
									"value": true
								},
								{
									"name": "columnDelimiter",
									"value": ","
								},
								{
									"name": "escapeChar",
									"value": "\\\\"
								},
								{
									"name": "quoteChar",
									"value": "\\\""
								}
							]
						}
					}
				],
				"TargetConnectionsInfo": [
					{
						"TargetEntities": [
							{
								"name": "reprojsonfile/output",
								"properties": {
									"schema": [],
									"dslConnectorProperties": [
										{
											"name": "container",
											"value": "reprojsonfile"
										},
										{
											"name": "fileSystem",
											"value": "reprojsonfile"
										},
										{
											"name": "folderPath",
											"value": "output"
										}
									]
								}
							}
						],
						"Connection": {
							"linkedServiceType": "AzureBlobStorage",
							"type": "linkedservicetype",
							"isInlineDataset": true,
							"commonDslConnectorProperties": [
								{
									"name": "allowSchemaDrift",
									"value": true
								},
								{
									"name": "inferDriftedColumnTypes",
									"value": true
								},
								{
									"name": "format",
									"value": "delimited"
								},
								{
									"name": "columnNamesAsHeader",
									"value": true
								},
								{
									"name": "columnDelimiter",
									"value": ","
								},
								{
									"name": "escapeChar",
									"value": "\\\\"
								},
								{
									"name": "quoteChar",
									"value": "\\\""
								}
							]
						},
						"DataMapperMappings": [
							{
								"targetEntityName": "reprojsonfile/output",
								"sourceEntityName": "reprojsonfile/Input",
								"sourceConnectionReference": {
									"connectionName": "AzureBlobStorage2",
									"type": "linkedservicetype"
								},
								"attributeMappingInfo": {
									"attributeMappings": []
								}
							}
						],
						"Relationships": []
					}
				],
				"Policy": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1
					},
					"mode": "Microbatch"
				},
				"status": "Stopped",
				"allowVNetOverride": true,
				"id": "65bd5c4408f1426ea8d374af4c0aed3d"
			},
			"dependsOn": []
		}
	]
}